---
import { work } from "@/resume.json";
import { sections } from "@/utils/const";
import { DateParser } from "@/utils/scripts";

const { name, text } = sections.find((elm) => elm.name === "experience");
const orderedExperience = work.toSorted((a, b) => {
  const aEndDate = new Date(a.endDate).getTime();
  const bEndDate = new Date(b.endDate).getTime();

  if (!bEndDate) {
    return aEndDate - bEndDate;
  }

  return bEndDate - aEndDate;
});
---

<section id={name}>
  <h2 class="section-title">{text}</h2>

  <section class="time-line">
    {
      orderedExperience.map((experience) => {
        const {
          name: companyName,
          summary,
          endDate,
          position,
          startDate,
          highlights,
        } = experience;

        const parsedStartDate = DateParser.format(startDate, {
          month: "short",
          year: "numeric",
        });

        const parsedEndDate = endDate
          ? DateParser.format(endDate, {
              month: "short",
              year: "numeric",
            })
          : "Actualidad";

        const relative =
          startDate && endDate
            ? `(${DateParser.relativeTime(startDate, endDate)})`
            : null;

        return (
          <article class:list={["time-line-element", !endDate && "current"]}>
            <hgroup>
              <h1>
                {position}
                &bull;
                <span>{companyName}</span>
              </h1>
              <h2>
                {parsedStartDate} - {parsedEndDate} {relative}
              </h2>
            </hgroup>

            <p>{summary}</p>

            {Boolean(highlights?.length) && (
              <div class="experience-highlights">
                <h3>
                  {endDate
                    ? "Tencnologías ó herramientas que usé en este periodo"
                    : "¿Qué estoy usando?"}
                </h3>

                <ul>
                  {experience.highlights.map((elm) => {
                    return <li>{elm}</li>;
                  })}
                </ul>
              </div>
            )}
          </article>
        );
      })
    }
  </section>
</section>

<style>
  section[id] {
    & .time-line {
      display: flex;
      flex-direction: column;
      position: relative;

      & .time-line-element {
        --dot-size: 14px;
        --active-experience-color: color-mix(
          in srgb,
          var(--current-text-theme) 10%,
          gray
        );
        --circle-border-size: 1px;

        position: relative;
        padding-left: calc(var(--dot-size) * 2);
        display: flex;
        flex-direction: column;
        gap: 16px;

        /* Circle --- */
        &::before {
          content: "";
          background-color: transparent;
          border: var(--circle-border-size) solid var(--active-experience-color);
          width: var(--dot-size);
          height: var(--dot-size);
          position: absolute;
          top: 0;
          left: 0;
          border-radius: 50%;
          z-index: 1;
          transition: 0.2s ease;
          transition-property: background-color, border-color;
        }
        /* --- */

        /* Line --- */
        &::after {
          content: "";
          border-right: var(--circle-border-size) solid
            var(--active-experience-color);
          width: calc(
            calc(var(--dot-size) / 2) + calc(var(--circle-border-size) / 2)
          );
          height: calc(100% - calc(var(--dot-size)));
          position: absolute;
          top: 0;
          left: 0;
          transition: 0.2s ease background-color;
          margin-top: calc(var(--dot-size) + var(--circle-border-size));
        }
        /* --- */

        &:not(:last-child) {
          padding-bottom: 64px;
        }

        &:is(.current) {
          --active-experience-color: color-mix(
            in srgb,
            transparent 20%,
            var(--current-neon-theme)
          );
        }

        & > hgroup {
          display: flex;
          flex-direction: column;
          gap: 4px;
          font-family: var(--font-title);

          & > * {
            &::first-letter {
              text-transform: capitalize;
            }
          }

          & > h1 {
            font-size: 1.5rem;
            font-weight: bold;
            line-height: 0.9;
          }

          & > h2 {
            font-size: 1.2rem;
            color: var(--active-experience-color);
            transition: 0.2s ease color;
          }
        }

        & > p {
          font-size: 1.1rem;
          text-wrap: pretty;
          color: var(--reading-text-color);
          margin-top: 8px;
        }

        & .experience-highlights {
          & > h3 {
            font-size: 1.25rem;
            font-weight: 600;
            margin-bottom: 4px;
            font-family: var(--font-title);
          }

          & > ul {
            display: flex;
            gap: 6px;
            flex-wrap: wrap;

            & > li {
              background-color: color-mix(
                in srgb,
                transparent 85%,
                var(--active-experience-color)
              );
              font-size: 1rem;
              width: fit-content;
              padding: 4px 8px;
              border-radius: var(--border-radius-min);
              color: color-mix(
                in srgb,
                var(--current-text-theme) 70%,
                var(--active-experience-color)
              );
            }
          }
        }
      }
    }
  }
</style>
