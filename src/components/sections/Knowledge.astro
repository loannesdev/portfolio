---
import Anchor from "@/components/Anchor.astro";
import Icon from "@/components/Icon.astro";
import { readCV } from "@/services";
import { sections } from "@/utils/const";

const { name, text } = sections.find((elm) => elm.name === "knowledge");
const { skills } = await readCV();
const filters = {
  all: "todos",
  "front-end": "front end",
  "back-end": "back end",
  tool: "herramientas",
  language: "lenguages",
};
const excludedTechs = [
  "netbeans",
  "materialize",
  "pg admin",
  "phpmyadmin",
  "react native paper",
  "skeleton",
  "sublime text",
  "token css",
  "visual studio",
  "visual studio code",
];
const parsedSkills = skills
  .sort((a, b) => {
    const first = a.name.toLowerCase();
    const second = b.name.toLowerCase();

    return first.localeCompare(second);
  })
  .filter(({ name }) => !excludedTechs.includes(name.toLowerCase()));
---

<section id={name}>
  <h1 class="section-title">{text}</h1>

  <section id="content">
    <div id="filters">
      {
        Object.entries(filters).map(([id, text]) => {
          return (
            <label class="filter-opt">
              <input
                type="radio"
                id={id}
                name="filter"
                {...{ checked: id === "all" }}
              />
              {text}
            </label>
          );
        })
      }
    </div>

    <section class="card-container">
      {
        parsedSkills.map(({ website, name, level, keywords }) => {
          return (
            <Anchor
              isExternalLink
              class="card"
              aria-label={`${name}, ${level}`}
              href={website}
              data-category={keywords?.join(" ")}
            >
              <Icon name={name} />

              <footer class="card-footer">
                <h1 class="card-title">{name}</h1>

                <small class="card-level" data-level={level}>
                  {level}
                </small>
              </footer>
            </Anchor>
          );
        })
      }
    </section>
  </section>
</section>

<style>
  section[id] {
    aspect-ratio: 395 / 368;
    align-content: baseline;
    width: 100%;

    & #content {
      display: grid;
      gap: 48px;

      & #filters {
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        column-gap: 24px;
        row-gap: 16px;
        flex-wrap: wrap;

        & .filter-opt {
          box-shadow: 0px 0px 1.5px currentColor;
          padding: 4px 12px;
          border-radius: var(--border-radius-max);
          transition: 0.3s ease;
          transition-property: border-color, color, background-color, box-shadow,
            text-shadow;
          cursor: pointer;
          user-select: none;
          word-break: keep-all;
          border: 1px solid
            color-mix(in srgb, transparent 90%, var(--current-text-theme));

          &::first-letter {
            text-transform: capitalize;
          }

          & > input {
            display: none;
          }

          &:has(> input:not(:checked)) {
            @media (pointer: fine) {
              &:hover {
                background-color: color-mix(
                  in srgb,
                  transparent,
                  var(--current-neon-theme) 15%
                );
                border-color: color-mix(
                  in srgb,
                  transparent 40%,
                  var(--current-neon-theme)
                );
              }
            }
          }

          &:has(> input:checked) {
            color: var(--neon-text-variant);
            border-color: var(--current-neon-theme);
            box-shadow: 0px 0px 6px var(--current-neon-theme);
            text-shadow: 0px 0px 1px var(--current-neon-theme);
          }
        }

        &:has(.filter-opt > input) {
          &:has(#front-end:checked) {
            ~ .card-container {
              .card:not([data-category*="front-end"]) {
                display: none;
              }
            }
          }

          &:has(#back-end:checked) {
            ~ .card-container {
              .card:not([data-category*="back-end"]) {
                display: none;
              }
            }
          }

          &:has(#tool:checked) {
            ~ .card-container {
              .card:not([data-category*="tool"]) {
                display: none;
              }
            }
          }

          &:has(#language:checked) {
            ~ .card-container {
              .card:not([data-category*="language"]) {
                display: none;
              }
            }
          }
        }
      }

      & .card-container {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        justify-content: center;

        & .card {
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          gap: 0.5rem;
          text-decoration: none;
          transition: 0.2s ease;
          transition-property: border, scale, text-shadow;
          border: 1px solid transparent;
          border-radius: var(--border-radius-med);
          text-align: center;
          padding: 12px 16px;
          color: currentColor;
          scale: 1;
          position: relative;

          @starting-style {
            scale: 0;
          }

          &::after {
            --icon-size: 28px;

            content: "";
            background: url("./../../icons/tabler-external-link.svg") no-repeat
              center;
            background-size: cover;
            height: var(--icon-size);
            width: var(--icon-size);
            position: absolute;
            top: calc(var(--icon-size) / 18 * -1);
            right: calc(var(--icon-size) / 18 * -1);
            transition: 0.1s ease allow-discrete;
            transition-property: display, background-image;
            display: none;
            filter: brightness(0) saturate(100%) invert(48%) sepia(1%)
              saturate(0%) hue-rotate(136deg) brightness(91%) contrast(83%);
          }

          @media (pointer: fine) {
            &:hover {
              border-color: var(--palette-grey);
              text-shadow: 1px 1.5px 2px var(--palette-grey);

              &::after {
                display: block;
              }
            }
          }

          @media (pointer: coarse) {
            border-color: var(--palette-grey);

            &::after {
              display: block;
            }

            &:active {
              background-color: var(--palette-grey);
            }
          }

          [icon] {
            height: 48px;
            width: 48px;
          }

          [icon="github" i],
          [icon="vercel" i],
          [icon="markdown" i] {
            filter: drop-shadow(0px 0px 8px var(--palette-white));
          }

          & .card-footer {
            display: flex;
            flex-wrap: wrap;
            flex-direction: column;
            align-items: center;
            gap: 3px;

            & .card-title {
              font-family: var(--font-title);
              font-weight: 600;
              font-size: 16.8px;
            }

            & .card-level {
              --color-level: transparent;
              --color-transparency: 0%;

              padding: 0.15rem 0.4rem;
              border-radius: var(--border-radius-min);
              border: 1px solid var(--color-level);
              letter-spacing: 1px;
              line-height: normal;
              background-color: color-mix(
                in srgb,
                transparent var(--color-transparency),
                var(--color-level)
              );
              font-family: var(--font-text);
            }

            & [data-level="b√°sico" i] {
              --color-level: rgb(128 128 128);
              --color-transparency: 90%;
            }

            & [data-level="intermedio" i] {
              --color-level: rgb(0 0 255);
              --color-transparency: 85%;
            }

            & [data-level="avanzado" i] {
              --color-level: rgb(0 128 0);
              --color-transparency: 70%;
            }
          }
        }
      }
    }
  }
</style>
