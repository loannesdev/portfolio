---
import { readRepos } from "@/services";
import { sections } from "@/utils/const";
import Anchor from "../Anchor.astro";
import Icon from "../Icon.astro";

const projects = await readRepos();
const { text, name } = sections.find((elm) => elm.name === "projects");
export const prerender = false;
---

<section id={name}>
  <h1 class="section-title">
    <Anchor href={`#${name}`}>{text}</Anchor>
  </h1>

  <section class="container">
    {
      projects.map((project) => {
        const {
          name,
          description,
          topics,
          html_url: htmlUrl,
          homepage,
        } = project;

        return (
          <article class="card">
            <h1 class="title-card">{name}</h1>

            {description && Boolean(description.length) && (
              <p class="description-card">{description}</p>
            )}

            {Boolean(topics.length) && (
              <section class="topics-container">
                <h2 class="topics-title">Tecnolog√≠as usadas</h2>

                <ul class="topics-group">
                  {topics.map((tech) => (
                    <li class="topic">{tech}</li>
                  ))}
                </ul>
              </section>
            )}

            <footer class="footer-card">
              {Boolean(htmlUrl.length) && (
                <Anchor href={htmlUrl} isExternalLink>
                  <Icon name="github" /> Repositorio
                </Anchor>
              )}

              {homepage && Boolean(homepage.length) && (
                <Anchor href={homepage} isExternalLink>
                  <Icon name="tabler-external-link" /> Demo
                </Anchor>
              )}
            </footer>
          </article>
        );
      })
    }
  </section>
</section>

<style>
  section[id] {
    aspect-ratio: 197 / 246;

    & .container {
      column-gap: 0.5rem;
      column-count: auto;
      column-width: 20rem;

      & .card {
        border: 0.1rem solid var(--palette-grey);
        padding: 16px;
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
        height: min-content;
        margin-bottom: 0.5rem;
        break-inside: avoid;
        border-radius: var(--border-radius-med);

        & .title-card {
          font-size: 24px;
          text-align: center;
          font-weight: 800;
          font-family: var(--font-title);
        }

        & .description-card {
          font-size: 18px;
          word-break: break-word;
          text-wrap: pretty;
          color: var(--reading-text-color);
          font-weight: 100;
        }

        & .topics-container {
          display: flex;
          flex-direction: column;
          gap: 0.3rem;

          & .topics-title {
            font-size: 1.15rem;
            font-weight: bold;
            font-family: var(--font-title);
          }

          & .topics-group {
            display: flex;
            gap: 0.3rem;
            flex-wrap: wrap;

            & .topic {
              background-color: color-mix(
                in srgb,
                transparent 97%,
                var(--current-text-theme)
              );
              padding: 4px 8px;
              border-radius: var(--border-radius-min);
              margin: 0;
              font-weight: 100;
            }
          }
        }

        & .footer-card {
          display: flex;
          flex-wrap: wrap;
          word-break: keep-all;
          gap: 12px;

          & > a {
            --button-text-shadow: 0px 0px 16px var(--current-neon-theme);
            padding: 8px 16px;
            border: 1px solid var(--palette-grey);
            text-decoration: none;
            transition: 0.2s ease;
            transition-property: color, background-color, border-color;
            border-radius: var(--border-radius-min);
            color: currentColor;
            display: flex;
            align-items: center;
            gap: 6px;

            @media (pointer: fine) {
              &:hover {
                border-color: var(--current-neon-theme);
                color: var(--current-neon-theme);
              }
            }

            @media (pointer: coarse) {
              &:active {
                border-color: var(--current-neon-theme);
                color: var(--current-neon-theme);
              }
            }

            & > :global(svg) {
              height: 24px;
              width: 24px;
              transition: 0.2 ease;
              transition-property: color, stroke;
              color: currentColor;
            }
          }
        }
      }
    }
  }
</style>
