---
import { readCV } from "@/services";
import { sections } from "@/utils/const";
import Anchor from "../Anchor.astro";

const { name, text } = sections.find((elm) => elm.name === "about");

const {
  basics: { summary },
  interests,
} = await readCV();
---

<section id={name}>
  <h1 class="section-title">{text}</h1>

  <section class="paragraph-container">
    <Fragment set:html={summary} />
  </section>

  <div class="location">
    <h1 class="location-title">Ubicaci√≥n</h1>

    <Anchor
      isExternalLink
      href="https://maps.app.goo.gl/kzraGrPbge2W5JAMA"
      class="location-link"
    >
      Cali, Colombia
    </Anchor>

    <span class="time-zone"></span>
  </div>

  <section class="interests-container">
    <h1 class="interests-title">Algunos de mis intereses son</h1>

    <div class="interests-tags">
      {
        interests.map(({ name }) => {
          return <colored-tag>{name}</colored-tag>;
        })
      }
    </div>
  </section>
</section>

<style>
  section[id] {
    display: grid;

    & .paragraph-container {
      display: flex;
      flex-direction: column;
      gap: 24px;

      & > :global(p) {
        font-size: 1.2rem;
        text-wrap: pretty;
        color: var(--reading-text-color);
      }
    }

    & .location {
      margin-top: 48px;
      font-size: 1.2rem;

      & .location-title {
        font-size: 1.3rem;
        font-family: var(--font-title);
        font-weight: 800;
        margin-bottom: 4px;
      }

      & .location-link {
        font-size: 1.5rem;
        font-weight: 700;
        letter-spacing: 2px;
      }

      & .time-zone {
        color: var(--reading-text-color);
      }
    }

    & .interests-container {
      margin-top: 24px;

      & .interests-title {
        font-family: var(--font-title);
        font-size: 1.3rem;
        font-weight: 800;
        margin-bottom: 4px;
      }

      & .interests-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 6px;

        & colored-tag {
          border-radius: var(--border-radius-min);
          font-size: 1rem;
          padding: 4px 12px;
          border: 1px solid currentColor;
          background-color: color-mix(
            in srgb,
            transparent 90%,
            var(--current-text-theme)
          );
          user-select: none;
        }
      }
    }

    & :global(strong),
    .interests-title,
    .location-title {
      color: var(--neon-text-variant);
    }
  }
</style>

<script>
  import { DateParser } from "@/utils/scripts";
  import "./../ColoredTag";

  const hoursDiff = DateParser.timeDiference();
  const sLetter = hoursDiff > 1 ? "s" : "";
  const timeZoneElement = document.querySelector(".time-zone");
  let timeZoneText = "Estamos en la misma zona horaria";

  if (hoursDiff > 0) {
    timeZoneText = `Vas adelantado por ${hoursDiff} hora${sLetter}`;
  }

  if (hoursDiff < 0) {
    timeZoneText = `Vas atrasado por ${hoursDiff} hora${sLetter}`;
  }

  timeZoneElement.innerHTML = `&#8226; ${timeZoneText}`;
</script>
