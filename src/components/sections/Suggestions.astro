---
import Anchor from "@/components/Anchor.astro";
import Icon from "@/components/Icon.astro";
import { contentCreators, sections } from "@/utils/const";
import Image from "astro/components/Image.astro";

const { name, text } = sections.find((elm) => elm.name === "suggestions");
const iconsFolder = "/suggestions";
---

<section id={name}>
  <h1 class="section-title">{text}</h1>

  <article class="information-source-wrapper">
    <h2>Creadores de contenido y m√°s</h2>

    <ul class="information-list">
      {
        contentCreators
          .sort((a, b) => a.name.localeCompare(b.name))
          .map(({ name, social, photo, role }, index) => {
            return (
              <li class="information-card">
                <Image
                  src={photo}
                  alt={`Foto de perfil de ${name}`}
                  width="240"
                  height="240"
                  loading="eager"
                />

                <div class="card-body">
                  <h1 class="name">{name}</h1>
                  {role && <p class="role">{role}</p>}

                  {social.length && (
                    <footer>
                      {social.map((socialItem) => {
                        const { key, url } = socialItem;
                        const iconName = key.includes("twitter") ? "x" : key;

                        if (!url) {
                          return null;
                        }

                        return (
                          <Anchor
                            href={url}
                            isExternalLink
                            aria-label={`Enlace a ${key}`}
                          >
                            <Icon name={iconName} folder={iconsFolder} />
                          </Anchor>
                        );
                      })}
                    </footer>
                  )}
                </div>
              </li>
            );
          })
      }
    </ul>
  </article>
</section>

<style>
  #suggestions {
    display: grid;

    & .section-title {
      margin-bottom: 24px;
    }

    & .information-source-wrapper {
      & > h2 {
        margin-bottom: 8px;
        font-size: 24px;
        font-weight: 600;
      }

      & .information-list {
        gap: 18px;
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
        grid-auto-flow: dense;

        & .information-card {
          display: flex;
          flex-direction: column;
          border-radius: var(--border-radius-med);
          position: relative;

          & > img {
            height: auto;
            width: auto;
            object-fit: cover;
            display: block;
            margin-bottom: 6px;
            border-radius: var(--border-radius-med);
          }

          & .card-body {
            padding: 12px;
            border: 1px solid var(--palette-grey);
            display: flex;
            flex-direction: column;
            gap: 12px;
            height: 100%;
            border-radius: var(--border-radius-med);

            & .name {
              font-size: 28px;
              font-weight: bold;
              font-family: var(--font-title);
            }

            & > footer {
              margin-block: auto 0px;
              display: flex;
              gap: 8px;
              flex-wrap: wrap;

              & > a {
                border-radius: var(--border-radius-min);
                display: flex;
                align-items: center;
                border: 1px solid var(--palette-grey);
                padding: 6px;
                transition: 0.2s ease-in-out;
                transition-property: border-color, background-color;

                &:hover {
                  background-color: color-mix(
                    in srgb,
                    transparent 95%,
                    var(--current-neon-theme)
                  );
                  border-color: color-mix(
                    in srgb,
                    transparent 70%,
                    var(--current-neon-theme)
                  );

                  & > :global(svg[icon]) {
                    filter: grayscale(0%);
                    transform: scale(1.2);
                  }
                }

                & > :global(svg[icon]) {
                  height: 32px;
                  width: 32px;
                  filter: grayscale(100%);
                  transition: 0.2s ease-in-out;
                  transition-property: filter, transform;
                }
              }
            }
          }
        }
      }
    }
  }

  @keyframes infinite-scroll {
    from {
      transform: rotateY(0deg);
    }
    to {
      transform: rotateY(-360deg);
    }
  }
</style>
