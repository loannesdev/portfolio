---
import { lookingForAJob, sections } from "@/utils/const";
import resume from "@/resume.json";
import Icon from "@/components/Icon.astro";
import Anchor from "@/components/Anchor.astro";

const {
  basics: { profiles },
} = resume;
---

<header class="header-container">
  <div>
    <section class="contact">
      <label id="dark-mode-container">
        <input id="dark-mode-button" type="checkbox" />
        <Icon name="sun" />
        <Icon name="moon" />
      </label>

      <article class="social-container">
        <div class="social">
          {
            profiles.map(({ network, url }) => {
              return (
                <Anchor
                  href={url}
                  isExternalLink
                  aria-label={`Ver cuenta en ${network}`}
                  data-title={network}
                >
                  <Icon name={network.toLowerCase()} />
                </Anchor>
              );
            })
          }
        </div>

        {
          lookingForAJob && (
            <Anchor
              href="/CV/CV_es.pdf"
              download="CV - Sebastian Cortes.pdf"
              aria-label="Descargar CV"
              class="download-cv"
            >
              Descargar CV
            </Anchor>
          )
        }
      </article>
    </section>

    <nav class="navigation-list">
      <ul>
        {
          sections.map(({ name, text }) => (
            <li>
              <Anchor
                href={"#" + name}
                aria-label={`Ir a secciÃ³n ${text.toLowerCase()}`}
                data-id={name}
              >
                {text}
              </Anchor>
            </li>
          ))
        }
      </ul>
    </nav>
  </div>

  <!-- <a href="/resume">imprimir CV</a> -->
</header>

<style>
  .header-container {
    z-index: 2;
    width: 100%;
    backdrop-filter: blur(24px);
    position: fixed;
    inset: 0px;
    bottom: auto;

    @media (pointer: coarse) {
      position: fixed;
      bottom: 0px;
      top: auto;
    }

    & > div {
      display: flex;
      column-gap: 48px;
      row-gap: 24px;
      justify-content: space-around;
      padding: 16px;
      font-family: var(--font-text);
      flex-wrap: wrap;
      align-items: center;
      width: 100%;
      justify-self: center;
      max-width: 1280px;
      margin-inline: auto;

      & .contact {
        display: flex;
        align-items: center;
        column-gap: 48px;
        row-gap: 12px;
        flex-wrap: wrap;
        justify-content: center;

        & #dark-mode-container {
          display: flex;
          border: 1px solid transparent;
          background-color: var(--is-dark-mode);
          padding: 4px;
          border-radius: var(--border-radius-min);
          justify-content: center;
          align-items: center;
          transition: border-color 0.2s ease;
          user-select: none;

          @media (pointer: fine) {
            &:hover {
              border-color: var(--palette-grey);
            }
          }

          @media (pointer: coarse) {
            &:active {
              border-color: var(--palette-grey);
            }
          }

          svg[icon="sun"] {
            color: yellow;
            display: var(--display-icon-light);
          }

          svg[icon="moon"] {
            color: var(--palette-black);
            display: var(--display-icon-dark);
          }

          & #dark-mode-button {
            display: none;
          }
        }

        & .social-container {
          display: flex;
          gap: 8px 32px;
          align-items: center;
          flex-wrap: wrap;
          justify-content: center;

          & .social {
            display: flex;
            gap: 0.5rem;
            justify-content: center;
            align-items: center;

            & :global(a) {
              --bg-color-tooltip: color-mix(
                in srgb,
                var(--current-background-theme) 90%,
                var(--current-text-theme)
              );

              display: flex;
              position: relative;

              [icon] {
                color: var(--current-text-theme);
              }

              @media (pointer: fine) {
                &::before,
                &::after {
                  transition: 0.3s ease allow-discrete;
                  transition-property: scale, display;
                  scale: 1;

                  @starting-style {
                    scale: 0;
                  }
                }

                &:hover {
                  &::after {
                    content: attr(data-title);
                    position: absolute;
                    bottom: -42px;
                    left: -60%;
                    color: var(--current-text-theme);
                    background-color: var(--bg-color-tooltip);
                    padding: 4px 8px;
                    border-radius: var(--border-radius-min);
                    font-size: 15px;
                  }

                  &::before {
                    content: "";
                    position: absolute;
                    clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
                    background-color: var(--bg-color-tooltip);
                    width: 8px;
                    height: 6px;
                    bottom: -14px;
                    left: 40%;
                  }
                }
              }
            }
          }

          & .download-cv {
            transition-duration: 0.2s;
            transition-property: color, font-weight, text-shadow;
            transition-timing-function: ease;
            border: 1px dotted var(--current-text-theme);
            border-radius: var(--border-radius-min);
            padding: 6px 12px;
            text-decoration: none;
            text-align: center;
            color: currentColor;
            user-select: none;

            @media (pointer: fine) {
              &:hover {
                color: var(--current-neon-theme);
                border-style: solid;
                text-shadow: 0 0 16px var(--current-neon-theme);
                border-color: var(--current-neon-theme);
              }
            }

            @media (pointer: coarse) {
              &:active {
                color: var(--current-neon-theme);
                border-style: solid;
                text-shadow: 0 0 16px var(--current-neon-theme);
                border-color: var(--current-neon-theme);
              }
            }
          }
        }

        & :global([icon]) {
          height: 32px;
          width: 32px;
        }
      }

      & .navigation-list {
        display: flex;
        align-items: center;

        & > ul {
          display: flex;
          gap: 12px 8px;
          flex-wrap: wrap;
          justify-content: center;
          border-radius: var(--border-radius-med);
          align-items: center;

          & > li {
            & > :global(a) {
              --bg-color: color-mix(
                in srgb,
                transparent 90%,
                var(--current-neon-theme)
              );

              text-decoration: none;
              word-break: break-all;
              border-radius: var(--border-radius-min);
              padding: 6px 12px;
              transition: 0.2s ease;
              transition-property: color, background-color, text-shadow;
              color: currentColor;
              user-select: none;
              will-change: color, background-color, text-shadow;
              overflow: hidden;

              @media (pointer: fine) {
                &:hover {
                  background-color: var(--bg-color);
                  color: var(--current-neon-theme);
                  text-shadow: 0px 0px 24px var(--current-neon-theme);
                }
              }

              @media (pointer: coarse) {
                &:active {
                  background-color: var(--bg-color);
                  color: var(--current-background-theme);
                }
              }

              &:is(.visible) {
                background-color: var(--bg-color);
                color: var(--current-neon-theme);
              }
            }
          }
        }
      }
    }
  }
</style>

<script>
  import { navHighlight } from "./../utils/scripts";

  // Dark mode
  document.getElementById("dark-mode-button").addEventListener("click", () => {
    const element = document.documentElement;
    const isDark = element.getAttribute("theme")?.includes("dark") ?? false;
    const theme = isDark ? "light" : "dark";

    localStorage.setItem("theme", theme);
    element.setAttribute("theme", theme);
  });
  // ---

  // Active navigation option when the corresponding section is active
  navHighlight();
  // ---
</script>
