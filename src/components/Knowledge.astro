---
import { readCV } from "../services.js";
import { sections } from "../utils/const.js";

const {
  knowledge: { name, text },
} = sections;
const { skills } = await readCV();
---

<section id={name}>
  <h1 class="section-title">{text}</h1>

  <section class="card-container">
      {
        skills.map(({ website, name, iconName, level }) => {
          return (
            <custom-anchor
              isExternalLink
              class="card"
              aria-label={`${name}, ${level}`}
              href={website}
            >
              {
                iconName && <svg-icon name={iconName} url="../icons/knowledge" />
              }

              <footer class="card-footer">
                <h1 class="card-title">{name}</h1>
                <small class="card-level" data-level={level}>{level}</small>
              </footer>
            </custom-anchor>
          )
        })
      }
  </section>
</section>

<style>
  section[id="knowledge"] {
    display: grid;
    gap: 1.5rem;
    width: 100%;
    aspect-ratio: 395 / 233;
    align-content: baseline;
    width: 100%;

    & .card-container {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      justify-content: center;

      & .card {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        text-decoration: none;
        padding: 0.3rem;
        transition-duration: 0.15s;
        transition-property: border;
        transition-timing-function: ease;
        border: 1px solid transparent;
        border-radius: var(--border-radius-min);
        text-align: center;
        padding: 12px 16px;
        color: currentColor;

        @media (pointer: fine) {
          &:hover {
            border-color: var(--palette-grey);
            text-shadow: 1px 1.5px 2px var(--palette-grey);
          }
        }

        @media (pointer: coarse) {
          &:active {
            background-color: var(--palette-grey);
          }
        }

        & svg-icon {
          min-height: 48px;
          min-width: 48px;
          aspect-ratio: 1 / 1;
        }

        [icon] {
          height: 48px;
          width: 48px;
        }

        [icon="github"], [icon="vercel"], [icon="markdown"] {
          filter: drop-shadow(0px 0px 4px var(--palette-white));
        }

        & .card-footer {
          display: flex;
          flex-wrap: wrap;
          flex-direction: column;
          align-items: center;
          gap: 3px;
          --bg-color-level: transparent;
          --alternative-color-level: transparent;

          & .card-title {
            font-family: var(--font-family-title);
            font-weight: 600;
            font-size: 16.8px;
          }

          & .card-level {
            padding: 0.15rem 0.4rem;
            border-radius: var(--border-radius-min);
            border: 1px solid var(--alternative-color-level);
            letter-spacing: 1px;
            line-height: normal;
            background-color: var(--bg-color-level);
            font-family: var(--font-family-text);
          }

          & [data-level="b√°sico" i] {
            --alternative-color-level: rgb(128 128 128 / 32%);
            --bg-color-level: rgb(128 128 128 / 8%);
          }

          & [data-level="intermedio" i] {
            --alternative-color-level: rgb(0 0 255 / 64%);
            --bg-color-level: rgb(0 0 255 / 12%);
          }

          & [data-level="avanzado" i] {
            --alternative-color-level: rgb(0 176 0 / 100%);
            --bg-color-level: rgb(0 128 0 / 40%);
          }
        }
      }
    }
  }
</style>

<script>
  import "./Icon.js";
  import "./Anchor.js"
</script>
